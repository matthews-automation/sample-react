@use "sass:math";

.container {
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

.row {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  margin: 0 auto;
  position: relative;
  padding: 0 20px; 
  @include bpMedium {
    padding: 0 scaleVal(48);
  }
  &__no-padding {
    padding: unset;
  }
}

.align-center {
  align-items: center;
}

.align-start {
  align-items: flex-start;
}

.align-end {
  align-items: flex-end;
}

.align-items-stretch {
  align-items: stretch;
}

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

.justify-start {
  justify-content: start;
}
.justify-end {
  justify-content: end;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.d-flex {
  display: flex;
}

.flex-wrap {
  flex-wrap: wrap;
}

.d-inline-flex {
  display: inline-flex;
}

.flex-row {
  flex-direction: row;
}
.flex-row-reverse {
  flex-direction: row-reverse;
  justify-content: flex-end;
}
.flex-column {
  flex-direction: column;
}
.flex-column-reverse {
  flex-direction: column-reverse;
}

.ratio-16-9 {
  aspect-ratio: 16 / 9;
  overflow: hidden;
  img {
    object-fit: contain;
    width: auto;
    height: 100%;
  }
}

.ratio-6-7 {
  aspect-ratio: 6 / 7;
  overflow: hidden;
  img {
    object-fit: contain;
    width: auto;
    height: 100%;
  }
}

.ratio-5-4 {
  aspect-ratio: 5 / 4;
  overflow: hidden;
  img {
    object-fit: contain;
    width: auto;
    height: 100%;
  }
}

.content-block {
  overflow: hidden;
  .heading-lockup{
    .sub-header {
      margin-bottom: 24px;
      @include bpMedium {
        margin-bottom: 0;
      }
    }
  }
  .card-container {
    display: block;
    gap: 20px;
    margin-top: 20px;
    @include bpMedium {
      margin-top: scaleVal(20);
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(23%, 1fr));
      gap: scaleVal(20);
    }
    > *:not(:last-child) { 
      margin-bottom: 40px;
      @include bpMedium {
        margin-bottom: 0;
      }
    }
  }
}

$i: 1;
$columnCount: nth($columns, $i);
$diff: math.div(100%, $columnCount);

@for $column from 0 through ($columnCount) {
  .col-#{$column} {
    width: $column * $diff;
  }
  .col-#{$column}-half {
    width: ($column * $diff) + (math.div($diff, 2));
  }

  .col-offset-#{$column} {
    margin-left: $column * $diff;
  }
  .col-offset-right-#{$column} {
    margin-right: $column * $diff;
  }
  .col-offset-#{$column}-half {
    margin-left: ($column * $diff) + (math.div($diff, 2));
  }
}

// BREAKPOINTS
$i: 1;
@each $mediaquery in $breakpoint-names {
  @include media-query(#{$mediaquery}) {
    $columnCount: nth($columns, $i);
    $diff: math.div(100%, $columnCount);

    .row {
      box-sizing: border-box;
    }

    .full-row {
      width: 100%;
      padding: 0;
    }

    .row.full {
      width: 100%;
      padding: 0;
      max-width: unset;
    }

    @for $column from 0 through ($columnCount) {
      .col-#{$mediaquery}-#{$column} {
        width: $column * $diff;
      }
      .col-#{$mediaquery}-#{$column}-half {
        width: ($column * $diff) + (math.div($diff, 2));
      }

      .col-#{$mediaquery}-offset-#{$column} {
        margin-left: $column * $diff;
      }

      .col-#{$mediaquery}-offset-right-#{$column} {
        margin-right: $column * $diff;
      }
      .col-#{$mediaquery}-offset-#{$column}-half {
        margin-left: ($column * $diff) + (math.div($diff, 2));
      }
    }

    .text-#{$mediaquery}-center { text-align: center; }
    .text-#{$mediaquery}-right { text-align: right; }

    .d-#{$mediaquery}-flex {       
      display: flex;
    }
    .d-#{$mediaquery}-inline-flex {
      display: inline-flex;
    }

    .flex-#{$mediaquery}-row {        
      flex-direction: row;
    }
    .flex-#{$mediaquery}-row-reverse {
      flex-direction: row-reverse;
    }
    .flex-#{$mediaquery}-column {
      flex-direction: column;
    }
    .flex-#{$mediaquery}-column-reverse {
      flex-direction: column-reverse;
    }
  }

  $i: $i + 1;
}

.xlg {
  @media screen and (max-width: ($breakpointXLValue - 1px)) {
    display: none;
  }
}

.desktop {
  @media screen and (max-width: $breakpointLValue) {
    display: none;
  }
}
.mobile {
  @media screen and (min-width: ($breakpointLValue + 1)) {
    display: none;
  }
}
